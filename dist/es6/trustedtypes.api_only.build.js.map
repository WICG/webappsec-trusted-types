{"version":3,"sources":["src/utils/eventHandlers.js","src/trustedtypes.js","src/polyfill/api_only.js"],"names":["unsafeAttributeEventHandlers","getUnsafeAttributeEventHandlers","window","eventHandlers","name","HTMLElement","prototype","slice","push","isBrowser","rejectInputFn","TypeError","rejectInputDefaultPolicyFn","toLowerCase","String","toUpperCase","TrustedTypePolicy","TrustedTypePolicyFactory","trustedTypes","trustedTypesBuilderTestOnly","privates","obj","v","privateMap","get","undefined","create","set","selfContained","collection","proto","getPrototypeOf","ObjectPrototype","Error","key","getOwnPropertyNames","defineProperty","value","lockdownTrustedType","SubClass","canonName","freeze","isTrustedTypeChecker","type","has","wrapPolicy","policyName","innerPolicy","creator","Ctor","methodName","method","DEFAULT_POLICY_NAME","policySpecificType","creatorSymbol","s","args","result","allowedValue","o","factory","policy","createTypeMapping","writable","configurable","enumerable","getTypeInternal_","tag","container","elNs","attrNs","canonicalTag","apply","ns","HTML_NS","map","hasOwnProperty","TYPE_MAP","getDefaultPolicy","defaultPolicy","assign","Object","forEach","Array","Symbol","WeakMap","policyNames","allowedNames","allowDuplicateNames","enforceNameRestrictions","TrustedType","constructor","toString","toJSON","valueOf","TrustedScriptURL","TrustedHTML","TrustedScript","emptyHTML","emptyScript","SVG_NS","ATTR_PROPERTY_MAP","HTMLIFrameElement","keys","attr","createFunctionAllowed","api","createPolicy","match","indexOf","call","console","warn","wrappedPolicy","isHTML","isScriptURL","isScript","getAttributeType","tagName","attribute","elementNs","attributeNs","canonicalAttr","getPropertyType","property","getTypeMapping","namespaceUri","document","documentElement","namespaceURI","e","JSON","parse","stringify","setPolicyNameRestrictions","allowedPolicyNames","allowDuplicates","length","el","clearPolicyNameRestrictions","resetDefaultPolicy","splice","publicApi","getOwnPropertyDescriptor"],"mappings":"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","file":"trustedtypes.api_only.build.js","sourcesContent":["/**\n * @license\n * Copyright 2017 Google Inc. All Rights Reserved.\n *\n * Licensed under the W3C SOFTWARE AND DOCUMENT NOTICE AND LICENSE.\n *\n *  https://www.w3.org/Consortium/Legal/2015/copyright-software-and-document\n */\n\n// TODO check attributes in safari, remove legacy safe handlers\nconst unsafeAttributeEventHandlers = [\n  'onabort',\n  'onactivate',\n  'onactivateinvisible',\n  'onafterprint',\n  'onafterupdate',\n  'onanimationcancel',\n  'onanimationend',\n  'onanimationiteration',\n  'onanimationstart',\n  'onariarequest',\n  'onauxclick',\n  'onbeforeactivate',\n  'onbeforecopy',\n  'onbeforecut',\n  'onbeforedeactivate',\n  'onbeforeeditfocus',\n  'onbeforepaste',\n  'onbeforeprint',\n  'onbeforeunload',\n  'onbegin',\n  'onblur',\n  'onbounce',\n  'oncancel',\n  'oncanplay',\n  'oncanplaythrough',\n  'oncellchange',\n  'onchange',\n  'onclick',\n  'onclose',\n  'oncommand',\n  'oncontextmenu',\n  'oncontrolselect',\n  'oncopy',\n  'oncuechange',\n  'oncut',\n  'ondataavailable',\n  'ondatasetchanged',\n  'ondatasetcomplete',\n  'ondblclick',\n  'ondeactivate',\n  'ondrag',\n  'ondragdrop',\n  'ondragend',\n  'ondragenter',\n  'ondragexit',\n  'ondragleave',\n  'ondragover',\n  'ondragstart',\n  'ondrop',\n  'ondurationchange',\n  'onemptied',\n  'onend',\n  'onended',\n  'onerror',\n  'onerrorupdate',\n  'onexit',\n  'onfilterchange',\n  'onfinish',\n  'onfocus',\n  'onfocusin',\n  'onfocusout',\n  'onformdata',\n  'onfullscreenchange',\n  'onfullscreenerror',\n  'ongotpointercapture',\n  'onhelp',\n  'oninput',\n  'oninvalid',\n  'onkeydown',\n  'onkeypress',\n  'onkeyup',\n  'onlayoutcomplete',\n  'onload',\n  'onloadeddata',\n  'onloadedmetadata',\n  'onloadend',\n  'onloadstart',\n  'onlosecapture',\n  'onlostpointercapture',\n  'onmediacomplete',\n  'onmediaerror',\n  'onmessage',\n  'onmousedown',\n  'onmouseenter',\n  'onmouseleave',\n  'onmousemove',\n  'onmouseout',\n  'onmouseover',\n  'onmouseup',\n  'onmousewheel',\n  'onmove',\n  'onmoveend',\n  'onmovestart',\n  'onmozfullscreenchange',\n  'onmozfullscreenerror',\n  'onmscontentzoom',\n  'onmsgesturechange',\n  'onmsgesturedoubletap',\n  'onmsgestureend',\n  'onmsgesturehold',\n  'onmsgesturestart',\n  'onmsgesturetap',\n  'onmsgotpointercapture',\n  'onmsinertiastart',\n  'onmslostpointercapture',\n  'onmsmanipulationstatechanged',\n  'onmspointercancel',\n  'onmspointerdown',\n  'onmspointerenter',\n  'onmspointerleave',\n  'onmspointermove',\n  'onmspointerout',\n  'onmspointerover',\n  'onmspointerup',\n  'onoffline',\n  'ononline',\n  'onoutofsync',\n  'onoverscroll',\n  'onpaste',\n  'onpause',\n  'onplay',\n  'onplaying',\n  'onpointercancel',\n  'onpointerdown',\n  'onpointerenter',\n  'onpointerleave',\n  'onpointermove',\n  'onpointerout',\n  'onpointerover',\n  'onpointerrawupdate',\n  'onpointerup',\n  'onprogress',\n  'onpropertychange',\n  'onratechange',\n  'onreadystatechange',\n  'onrepeat',\n  'onreset',\n  'onresize',\n  'onresizeend',\n  'onresizestart',\n  'onresume',\n  'onreverse',\n  'onrowdelete',\n  'onrowenter',\n  'onrowexit',\n  'onrowinserted',\n  'onscroll',\n  'onscrollend',\n  'onsearch',\n  'onseek',\n  'onseeked',\n  'onseeking',\n  'onselect',\n  'onselectionchange',\n  'onselectstart',\n  'onshow',\n  'onstalled',\n  'onstart',\n  'onstop',\n  'onstorage',\n  'onsubmit',\n  'onsuspend',\n  'onsynchrestored',\n  'ontimeerror',\n  'ontimeupdate',\n  'ontoggle',\n  'ontrackchange',\n  'ontransitioncancel',\n  'ontransitionend',\n  'ontransitionrun',\n  'ontransitionstart',\n  'onunload',\n  'onurlflip',\n  'onvolumechange',\n  'onwaiting',\n  'onwebkitanimationend',\n  'onwebkitanimationiteration',\n  'onwebkitanimationstart',\n  'onwebkitfullscreenchange',\n  'onwebkitfullscreenerror',\n  'onwebkittransitionend',\n  'onwheel',\n];\n\n/**\n * Returns an array of all event handlers. Some of the event handlers may be\n * supported only in some browsers.\n *\n * For every event type that the browser supports, SVG supports that as an event\n * attribute, following the same requirements as for HTML event attributes.\n * https://developer.mozilla.org/en-US/docs/Web/SVG/Attribute/Events\n *\n * @return {!Array<string>}\n */\nexport function getUnsafeAttributeEventHandlers() {\n  if (typeof window !== 'undefined') {\n    const eventHandlers = [];\n    for (const name in HTMLElement.prototype) {\n      if (name.slice(0, 2) === 'on') {\n        eventHandlers.push(name);\n      }\n    }\n    return eventHandlers;\n  } else {\n    return unsafeAttributeEventHandlers;\n  }\n}\n","/**\n * @license\n * Copyright 2017 Google Inc. All Rights Reserved.\n *\n * Licensed under the W3C SOFTWARE AND DOCUMENT NOTICE AND LICENSE.\n *\n *  https://www.w3.org/Consortium/Legal/2015/copyright-software-and-document\n */\n\nimport {getUnsafeAttributeEventHandlers} from './utils/eventHandlers.js';\n\nconst isBrowser = typeof window !== 'undefined';\n\nconst rejectInputFn = (s) => {\n  throw new TypeError('undefined conversion');\n};\n\nconst rejectInputDefaultPolicyFn = (s) => null;\n\nconst {toLowerCase, toUpperCase} = String.prototype;\n\nexport const HTML_NS = 'http://www.w3.org/1999/xhtml';\nexport const SVG_NS = 'http://www.w3.org/2000/svg';\n\n/**\n * @constructor\n * @property {!function(string):TrustedHTML} createHTML\n * @property {!function(string):TrustedScriptURL} createScriptURL\n * @property {!function(string):TrustedScript} createScript\n * @property {!string} name\n */\nexport const TrustedTypePolicy = function() {\n  throw new TypeError('Illegal constructor');\n};\n\n/**\n * @constructor\n */\nexport const TrustedTypePolicyFactory = function() {\n  throw new TypeError('Illegal constructor');\n};\n\n/* eslint-disable no-unused-vars */\n/**\n * @typedef {TrustedTypesInnerPolicy}\n * @property {function(string):string} createHTML\n * @property {function(string):string} createScriptURL\n * @property {function(string):string} createScript\n */\nconst TrustedTypesInnerPolicy = {};\n\n/**\n * @typedef {!Object<string, {\n *   attributes: !Object<string, string>,\n *   properties: !Object<string, string>}>}\n */\nconst TrustedTypesTypeMap = {};\n/* eslint-enable no-unused-vars */\n\nexport const DEFAULT_POLICY_NAME = 'default';\n\n\nexport const trustedTypesBuilderTestOnly = function() {\n  // Capture common names early.\n  const {\n    assign, create, defineProperty, freeze, getOwnPropertyNames,\n    getPrototypeOf, prototype: ObjectPrototype,\n  } = Object;\n\n  const {hasOwnProperty} = ObjectPrototype;\n\n  const {\n    forEach, push,\n  } = Array.prototype;\n\n  const creatorSymbol = Symbol();\n\n  /**\n   * Getter for the privateMap.\n   * @param  {Object} obj Key of the privateMap\n   * @return {Object<string, string>} Private storage.\n   */\n  const privates = function(obj) {\n    let v = privateMap.get(obj);\n    if (v === undefined) {\n      v = create(null); // initialize the private storage.\n      privateMap.set(obj, v);\n    }\n    return v;\n  };\n\n  /**\n   * Called before attacker-controlled code on an internal collections,\n   * copies prototype members onto the instance directly, so that later\n   * changes to prototypes cannot expose collection internals.\n   * @param {!T} collection\n   * @return {!T} collection\n   * @template T\n   */\n  function selfContained(collection) {\n    const proto = getPrototypeOf(collection);\n    if (proto == null || getPrototypeOf(proto) !== ObjectPrototype) {\n      throw new Error(); // Loop below is insufficient.\n    }\n    for (const key of getOwnPropertyNames(proto)) {\n      defineProperty(collection, key, {value: collection[key]});\n    }\n    return collection;\n  }\n\n  /**\n   * Map for private properties of Trusted Types object.\n   * This is so that the access to the type constructor does not give\n   * the ability to create typed values.\n   * @type {WeakMap}\n   */\n  const privateMap = selfContained(new WeakMap());\n\n  /**\n   * List of all configured policy names.\n   * @type {Array<string>}\n   */\n  const policyNames = selfContained([]);\n\n  /**\n   * Allowed policy names.\n   * Applied only if enforceNameRestrictions is true.\n   * @type {Array<string>}\n   */\n  const allowedNames = selfContained([]);\n\n  /**\n   * Should duplicate prolicy names be allowed.\n   * Applied only if enforceNameRestrictions is true.\n   * @type {boolean}\n   */\n  let allowDuplicateNames = true;\n\n  /**\n   * A reference to a default policy, if created.\n   * @type {TrustedTypePolicy}\n   */\n  let defaultPolicy = null;\n\n  /**\n   * Whether to enforce allowedNames in createPolicy().\n   * @type {boolean}\n   */\n  let enforceNameRestrictions = false;\n\n\n  /**\n   * A value that is trusted to have certain security-relevant properties\n   * because the sources of such values are controlled.\n   */\n  class TrustedType {\n    /**\n     * Constructor for TrustedType. Only allowed to be called from within a\n     * policy.\n     * @param {symbol} s creatorSymbol\n     * @param {string} policyName The name of the policy this object was\n     *   created by.\n     */\n    constructor(s, policyName) {\n      // TODO: Figure out if symbol is needed, if the value is in privateMap.\n      if (s !== creatorSymbol) {\n        throw new Error('cannot call the constructor');\n      }\n      defineProperty(this, 'policyName',\n          {value: '' + policyName, enumerable: true});\n    }\n\n    /**\n     * Returns the wrapped string value of the object.\n     * @return {string}\n     * @override\n     */\n    toString() {\n      return privates(this)['v'];\n    }\n\n    /**\n     * Returns the wrapped string for JSON serialization.\n     * @return {string}\n     * @override\n     */\n    toJSON() {\n      return privates(this)['v'];\n    }\n\n    /**\n     * Returns the wrapped string value of the object.\n     * @return {string}\n     * @override\n     */\n    valueOf() {\n      return privates(this)['v'];\n    }\n  }\n\n  /**\n   * @param {function(new:TrustedType, symbol, string)} SubClass\n   * @param {string} canonName The class name which should be independent of\n   *     any renaming pass and which is relied upon by the enforcer and for\n   *     native type interop.\n   */\n  function lockdownTrustedType(SubClass, canonName) {\n    freeze(SubClass.prototype);\n    delete SubClass.name;\n    defineProperty(SubClass, 'name', {value: canonName});\n  }\n\n  /**\n   * Trusted Script URL object wrapping a string that can only be created from a\n   * TT policy.\n   */\n  class TrustedScriptURL extends TrustedType {\n  }\n  lockdownTrustedType(TrustedScriptURL, 'TrustedScriptURL');\n\n  /**\n   * Trusted HTML object wrapping a string that can only be created from a\n   * TT policy.\n   */\n  class TrustedHTML extends TrustedType {\n  }\n  lockdownTrustedType(TrustedHTML, 'TrustedHTML');\n\n  /**\n   * Trusted Script object wrapping a string that can only be created from a\n   * TT policy.\n   */\n  class TrustedScript extends TrustedType {\n  }\n  lockdownTrustedType(TrustedScript, 'TrustedScript');\n\n  lockdownTrustedType(TrustedType, 'TrustedType');\n\n  // Common constants.\n  const emptyHTML = freeze(create(new TrustedHTML(creatorSymbol, '')));\n  privates(emptyHTML)['v'] = '';\n  const emptyScript = freeze(create(new TrustedScript(creatorSymbol, '')));\n  privates(emptyScript)['v'] = '';\n\n  /**\n   * A map of attribute / property names to allowed types\n   * for known namespaces.\n   * @type {!Object<string,!TrustedTypesTypeMap>}\n   */\n  const TYPE_MAP = {\n    [HTML_NS]: {\n      // TODO(koto): Figure out what to to with <link>\n      'EMBED': {\n        'attributes': {\n          'src': TrustedScriptURL.name,\n        },\n      },\n      'IFRAME': {\n        'attributes': {\n          'srcdoc': TrustedHTML.name,\n        },\n      },\n      'OBJECT': {\n        'attributes': {\n          'data': TrustedScriptURL.name,\n          'codebase': TrustedScriptURL.name,\n        },\n      },\n      // TODO(koto): Figure out what to do with portals.\n      'SCRIPT': {\n        'attributes': {\n          'src': TrustedScriptURL.name,\n          'text': TrustedScript.name,\n        },\n        'properties': {\n          'innerText': TrustedScript.name,\n          'textContent': TrustedScript.name,\n          'text': TrustedScript.name,\n        },\n      },\n      '*': {\n        'attributes': {},\n        'properties': {\n          'innerHTML': TrustedHTML.name,\n          'outerHTML': TrustedHTML.name,\n        },\n      },\n    },\n    [SVG_NS]: {\n      '*': {\n        'attributes': {},\n        'properties': {},\n      },\n    },\n  };\n\n  /**\n   * A map of element property to HTML attribute names.\n   * @type {!Object<string, string>}\n   */\n  const ATTR_PROPERTY_MAP = {\n    'codebase': 'codeBase',\n    'formaction': 'formAction',\n  };\n\n  // Edge doesn't support srcdoc.\n  if (isBrowser && !('srcdoc' in HTMLIFrameElement.prototype)) {\n    delete TYPE_MAP[HTML_NS]['IFRAME']['attributes']['srcdoc'];\n  }\n\n  // in HTML, clone attributes into properties.\n  for (const tag of Object.keys(TYPE_MAP[HTML_NS])) {\n    if (!TYPE_MAP[HTML_NS][tag]['properties']) {\n      TYPE_MAP[HTML_NS][tag]['properties'] = {};\n    }\n    for (const attr of Object.keys(TYPE_MAP[HTML_NS][tag]['attributes'])) {\n      TYPE_MAP[HTML_NS][tag]['properties'][\n          ATTR_PROPERTY_MAP[attr] ? ATTR_PROPERTY_MAP[attr] : attr\n      ] = TYPE_MAP[HTML_NS][tag]['attributes'][attr];\n    }\n  }\n\n  // Add inline event handlers attribute names.\n  for (const name of getUnsafeAttributeEventHandlers()) {\n    TYPE_MAP[HTML_NS]['*']['attributes'][name] = 'TrustedScript';\n    TYPE_MAP[SVG_NS]['*']['attributes'][name] = 'TrustedScript';\n  }\n\n  /**\n   * @type {!Object<string,!Function>}\n   */\n  const createTypeMapping = {\n    'createHTML': TrustedHTML,\n    'createScriptURL': TrustedScriptURL,\n    'createScript': TrustedScript,\n  };\n\n  const createFunctionAllowed = createTypeMapping.hasOwnProperty;\n\n  /**\n   * Function generating a type checker.\n   * @template T\n   * @param  {T} type The type to check against.\n   * @return {function(*):boolean}\n   */\n  function isTrustedTypeChecker(type) {\n    return (obj) => (obj instanceof type) && privateMap.has(obj);\n  }\n\n  /**\n   * Wraps a user-defined policy rules with TT constructor\n   * @param  {string} policyName The policy name\n   * @param  {TrustedTypesInnerPolicy} innerPolicy InnerPolicy\n   * @return {!TrustedTypePolicy} Frozen policy object\n   */\n  function wrapPolicy(policyName, innerPolicy) {\n    /**\n     * @template T\n     * @param {function(new:T, symbol, string)} Ctor a trusted type constructor\n     * @param {string} methodName the policy factory method name\n     * @return {function(string):!T} a factory that produces instances of Ctor.\n     */\n    function creator(Ctor, methodName) {\n      // This causes thisValue to be null when called below.\n      const method = innerPolicy[methodName] || (\n        policyName == DEFAULT_POLICY_NAME ?\n            rejectInputDefaultPolicyFn : rejectInputFn\n      );\n      const policySpecificType = freeze(new Ctor(creatorSymbol, policyName));\n      const factory = {\n        [methodName](s, ...args) {\n          // Trick to get methodName to show in stacktrace.\n          let result = method('' + s, ...args);\n          if (result === undefined || result === null) {\n            if (policyName == DEFAULT_POLICY_NAME) {\n              // These values mean that the input was rejected. This will cause\n              // a violation later, don't create types for them.\n              return result;\n            }\n            result = '';\n          }\n          const allowedValue = '' + result;\n          const o = freeze(create(policySpecificType));\n          privates(o)['v'] = allowedValue;\n          return o;\n        },\n      }[methodName];\n      return freeze(factory);\n    }\n\n    const policy = create(TrustedTypePolicy.prototype);\n\n    for (const name of getOwnPropertyNames(createTypeMapping)) {\n      policy[name] = creator(createTypeMapping[name], name);\n    }\n    defineProperty(policy, 'name', {\n      value: policyName,\n      writable: false,\n      configurable: false,\n      enumerable: true,\n    });\n\n    return /** @type {!TrustedTypePolicy} */ (freeze(policy));\n  }\n\n  /**\n   * Returns the name of the trusted type required for a given element\n   *   attribute.\n   * @param {string} tagName The name of the tag of the element.\n   * @param {string} attribute The name of the attribute.\n   * @param {string=} elementNs Element namespace.\n   * @param {string=} attributeNs The attribute namespace.\n   * @return {string?} Required type name or null, if a Trusted\n   *   Type is not required.\n   */\n  function getAttributeType(tagName, attribute, elementNs = '',\n      attributeNs = '') {\n    const canonicalAttr = toLowerCase.apply(String(attribute));\n    return getTypeInternal_(tagName, 'attributes', canonicalAttr,\n        elementNs, attributeNs) || null;\n  }\n\n  /**\n   * Returns a type name from a type map.\n   * @param {string} tag A tag name.\n   * @param {string} container 'attributes' or 'properties'\n   * @param {string} name The attribute / property name.\n   * @param {string=} elNs Element namespace.\n   * @param {string=} attrNs Attribute namespace.\n   * @return {string|undefined}\n   * @private\n   */\n  function getTypeInternal_(tag, container, name, elNs = '', attrNs = '') {\n    const canonicalTag = toUpperCase.apply(String(tag));\n\n    let ns = attrNs ? attrNs : elNs;\n    if (!ns) {\n      ns = HTML_NS;\n    }\n    const map = hasOwnProperty.apply(TYPE_MAP, [ns]) ? TYPE_MAP[ns] : null;\n    if (!map) {\n      return;\n    }\n    if (hasOwnProperty.apply(map, [canonicalTag]) &&\n        map[canonicalTag] &&\n        hasOwnProperty.apply(map[canonicalTag][container], [name]) &&\n        map[canonicalTag][container][name]) {\n      return map[canonicalTag][container][name];\n    }\n\n    if (hasOwnProperty.apply(map, ['*']) &&\n        hasOwnProperty.apply(map['*'][container], [name]) &&\n        map['*'][container][name]) {\n      return map['*'][container][name];\n    }\n  }\n\n  /**\n   * Returns the name of the trusted type required for a given element property.\n   * @param {string} tagName The name of the tag of the element.\n   * @param {string} property The property.\n   * @param {string=} elementNs Element namespace.\n   * @return {string?} Required type name or null, if a Trusted\n   *   Type is not required.\n   */\n  function getPropertyType(tagName, property, elementNs = '') {\n    // TODO: Support namespaces.\n    return getTypeInternal_(\n        tagName, 'properties', String(property), elementNs) || null;\n  }\n\n  /**\n   * Returns the type map-like object, that resolves a name of a type for a\n   * given tag + attribute / property in a given namespace.\n   * The keys of the map are uppercase tag names. Map entry has mappings between\n   * a lowercase attribute name / case-sensitive property name and a name of the\n   * type that is required for that attribute / property.\n   * Example entry for 'IMG': {\"attributes\": {\"src\": \"TrustedHTML\"}}\n   * @param {string=} namespaceUri The namespace URI (will use the current\n   *   document namespace URI if omitted).\n   * @return {TrustedTypesTypeMap}\n   */\n  function getTypeMapping(namespaceUri = '') {\n    if (!namespaceUri) {\n      try {\n        namespaceUri = document.documentElement.namespaceURI;\n      } catch (e) {\n        namespaceUri = HTML_NS;\n      }\n    }\n    /**\n     * @template T\n     * @private\n     * @param {T} o\n     * @return {T}\n     */\n    function deepClone(o) {\n      return JSON.parse(JSON.stringify(o));\n    }\n    const map = TYPE_MAP[namespaceUri];\n    if (!map) {\n      return {};\n    }\n    return deepClone(map);\n  }\n\n  /**\n   * Creates a TT policy.\n   *\n   * Returns a frozen object representing a policy - a collection of functions\n   * that may create TT objects based on the user-provided rules specified\n   * in the policy object.\n   *\n   * @param  {string} name A unique name of the policy.\n   * @param  {TrustedTypesInnerPolicy} policy Policy rules object.\n   * @return {TrustedTypePolicy} The policy that may create TT objects\n   *   according to the policy rules.\n   */\n  function createPolicy(name, policy) {\n    const pName = '' + name; // Assert it's a string\n\n    if (!pName.match(/^[-#a-zA-Z0-9=_/@.%]+$/g)) {\n      throw new TypeError('Policy ' + pName + ' contains invalid characters.');\n    }\n\n    if (enforceNameRestrictions && allowedNames.indexOf(pName) === -1 &&\n        allowedNames.indexOf('*') === -1) {\n      throw new TypeError('Policy ' + pName + ' disallowed.');\n    }\n\n    if (pName === DEFAULT_POLICY_NAME && defaultPolicy) {\n      throw new TypeError('Policy ' + pName + ' already exists.');\n    }\n    if (enforceNameRestrictions && !allowDuplicateNames &&\n        policyNames.indexOf(pName) !== -1) {\n      throw new TypeError('Policy ' + pName + ' exists.');\n    }\n    // Register the name early so that if policy getters unwisely calls\n    // across protection domains to code that reenters this function,\n    // policy author still has rights to the name.\n    policyNames.push(pName);\n\n    // Only copy own properties of names present in createTypeMapping.\n    const innerPolicy = create(null);\n    if (policy && typeof policy === 'object') {\n      // Treat non-objects as empty policies.\n      for (const key of getOwnPropertyNames(/** @type {!Object} */ (policy))) {\n        if (createFunctionAllowed.call(createTypeMapping, key)) {\n          innerPolicy[key] = policy[key];\n        }\n      }\n    } else {\n      // eslint-disable-next-line no-console\n      console.warn('trustedTypes.createPolicy ' + pName +\n          ' was given an empty policy');\n    }\n    freeze(innerPolicy);\n\n    const wrappedPolicy = wrapPolicy(pName, innerPolicy);\n\n    if (pName === DEFAULT_POLICY_NAME) {\n      defaultPolicy = wrappedPolicy;\n    }\n\n    return wrappedPolicy;\n  }\n\n  /**\n   * Applies the policy name restrictions.\n   * @param {!Array<string>} allowedPolicyNames\n   * @param {boolean} allowDuplicates\n   */\n  function setPolicyNameRestrictions(allowedPolicyNames, allowDuplicates) {\n    enforceNameRestrictions = true;\n    allowedNames.length = 0;\n    forEach.call(allowedPolicyNames, (el) => {\n      push.call(allowedNames, '' + el);\n    });\n    allowDuplicateNames = allowDuplicates;\n    policyNames.length = 0; // Clear already used policy names list.\n  }\n\n  /**\n   * Clears the policy name restrictions.\n   */\n  function clearPolicyNameRestrictions() {\n    enforceNameRestrictions = false;\n  }\n\n  /**\n   * Returns the default policy, or null if it was not created.\n   * @return {TrustedTypePolicy}\n   */\n  function getDefaultPolicy() {\n    return defaultPolicy;\n  }\n\n  /**\n   * Resets the default policy.\n   */\n  function resetDefaultPolicy() {\n    defaultPolicy = null;\n    policyNames.splice(policyNames.indexOf(DEFAULT_POLICY_NAME), 1);\n  }\n\n  const api = create(TrustedTypePolicyFactory.prototype);\n  assign(api, {\n    // The main function to create policies.\n    createPolicy,\n\n    // Type checkers, also validating the object was initialized through a\n    // policy.\n    isHTML: isTrustedTypeChecker(TrustedHTML),\n    isScriptURL: isTrustedTypeChecker(TrustedScriptURL),\n    isScript: isTrustedTypeChecker(TrustedScript),\n\n    getAttributeType,\n    getPropertyType,\n    getTypeMapping,\n    emptyHTML,\n    emptyScript,\n    defaultPolicy, // Just to make the compiler happy, this is overridden below.\n\n    TrustedHTML: TrustedHTML,\n    TrustedScriptURL: TrustedScriptURL,\n    TrustedScript: TrustedScript,\n  });\n\n  defineProperty(api, 'defaultPolicy', {\n    get: getDefaultPolicy,\n    set: () => {},\n  });\n\n  return {\n    trustedTypes: freeze(api),\n    setPolicyNameRestrictions,\n    clearPolicyNameRestrictions,\n    getDefaultPolicy,\n    resetDefaultPolicy,\n  };\n};\n\n\nexport const {\n  trustedTypes,\n  setPolicyNameRestrictions,\n  clearPolicyNameRestrictions,\n  getDefaultPolicy,\n  resetDefaultPolicy,\n} = trustedTypesBuilderTestOnly();\n\n","/**\n * @license\n * Copyright 2017 Google Inc. All Rights Reserved.\n *\n * Licensed under the W3C SOFTWARE AND DOCUMENT NOTICE AND LICENSE.\n *\n *  https://www.w3.org/Consortium/Legal/2015/copyright-software-and-document\n */\n\n/**\n * @fileoverview Entry point for a polyfill that only defines the trusted types\n * API and makes it available in the global scope. This version of polyfill\n * doesn't contain the enforcement API. If you want to protect DOM sinks, use\n * the full polyfill instead.\n */\nimport {trustedTypes, TrustedTypePolicy, TrustedTypePolicyFactory} from\n  '../trustedtypes.js';\n\n/**\n * Sets up the public Trusted Types API in the global object.\n */\nfunction setupPolyfill() {\n  // We use array accessors to make sure Closure compiler will not alter the\n  // names of the properties..\n\n  // we setup the polyfill only in browser environment.\n  if (typeof window === 'undefined') {\n    return;\n  }\n  const rootProperty = 'trustedTypes';\n\n  // Convert old window.TrustedTypes to window.trustedTypes.\n  if (window['TrustedTypes'] && typeof window[rootProperty] === 'undefined') {\n    window[rootProperty] = Object.freeze(window['TrustedTypes']);\n  }\n\n  if (typeof window[rootProperty] !== 'undefined') {\n    return;\n  }\n\n  const publicApi = Object.create(TrustedTypePolicyFactory.prototype);\n  Object.assign(publicApi, {\n    'isHTML': trustedTypes.isHTML,\n    'isScriptURL': trustedTypes.isScriptURL,\n    'isScript': trustedTypes.isScript,\n    'createPolicy': trustedTypes.createPolicy,\n    'getAttributeType': trustedTypes.getAttributeType,\n    'getPropertyType': trustedTypes.getPropertyType,\n    'getTypeMapping': trustedTypes.getTypeMapping,\n    'emptyHTML': trustedTypes.emptyHTML,\n    'emptyScript': trustedTypes.emptyScript,\n    '_isPolyfill_': true,\n  });\n  Object.defineProperty(\n      publicApi,\n      'defaultPolicy',\n      Object.getOwnPropertyDescriptor(trustedTypes, 'defaultPolicy') || {}\n  );\n\n  window[rootProperty] = Object.freeze(publicApi);\n\n  window['TrustedHTML'] = trustedTypes.TrustedHTML;\n  window['TrustedScriptURL'] = trustedTypes.TrustedScriptURL;\n  window['TrustedScript'] = trustedTypes.TrustedScript;\n  window['TrustedTypePolicy'] = TrustedTypePolicy;\n  window['TrustedTypePolicyFactory'] = TrustedTypePolicyFactory;\n}\n\n\nsetupPolyfill();\n"]}